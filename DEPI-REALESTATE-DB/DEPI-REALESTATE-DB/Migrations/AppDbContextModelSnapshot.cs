// <auto-generated />
using System;
using DEPI_REALESTATE_DB.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DEPI_REALESTATE_DB.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DEPI_REALESTATE_DB.Model.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles", "accounts");
                });

            modelBuilder.Entity("DEPI_REALESTATE_DB.Model.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("DateJoined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserID");

                    b.HasIndex("RoleId");

                    b.ToTable("Users", "accounts");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("DEPI_REALESTATE_DB.Model.Agent", b =>
                {
                    b.HasBaseType("DEPI_REALESTATE_DB.Model.User");

                    b.Property<string>("AgencyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ExperienceYears")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<float>("Rating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<int>("TaxIdentificationNumber")
                        .HasColumnType("int");

                    b.ToTable("Agents", "accounts");
                });

            modelBuilder.Entity("DEPI_REALESTATE_DB.Model.Broker", b =>
                {
                    b.HasBaseType("DEPI_REALESTATE_DB.Model.User");

                    b.Property<int>("LicenseID")
                        .HasColumnType("int");

                    b.Property<int>("NationalID")
                        .HasColumnType("int");

                    b.ToTable("Brokers", "accounts");
                });

            modelBuilder.Entity("DEPI_REALESTATE_DB.Model.User", b =>
                {
                    b.HasOne("DEPI_REALESTATE_DB.Model.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DEPI_REALESTATE_DB.Model.Agent", b =>
                {
                    b.HasOne("DEPI_REALESTATE_DB.Model.User", null)
                        .WithOne()
                        .HasForeignKey("DEPI_REALESTATE_DB.Model.Agent", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DEPI_REALESTATE_DB.Model.Broker", b =>
                {
                    b.HasOne("DEPI_REALESTATE_DB.Model.User", null)
                        .WithOne()
                        .HasForeignKey("DEPI_REALESTATE_DB.Model.Broker", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DEPI_REALESTATE_DB.Model.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
